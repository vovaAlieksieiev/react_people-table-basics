{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/People.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","slugPerson","name","sex","born","died","motherName","fatherName","mother","slug","father","classNames","to","PeopleTable","people","useParams","map","People","useState","setPeople","isLoading","setIsloading","isError","setIsError","useEffect","catch","finally","preparedPeople","useMemo","find","mom","dad","length","getIsActive","isActive","App","role","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.56a8a9b9.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  slugPerson: string,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, slugPerson }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    slug,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': slugPerson === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={classNames({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {!motherName && '-'}\n\n        {motherName && mother && (\n          <Link\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {mother.name}\n          </Link>\n        )}\n\n        {motherName && !mother && motherName}\n      </td>\n      <td>\n        {!fatherName && '-'}\n\n        {fatherName && father && (\n          <Link\n            to={`/people/${father.slug}`}\n          >\n            {father.name}\n          </Link>\n        )}\n\n        {fatherName && !father && fatherName}\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n  const slugPerson = slug || '';\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink\n            person={person}\n            key={person.name}\n            slugPerson={slugPerson}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useMemo, useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const People = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsloading] = useState<boolean>(false);\n  const [isError, setIsError] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsError(false);\n    setIsloading(true);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsloading(false));\n  }, []);\n\n  const preparedPeople = useMemo(() => {\n    return people\n      .map(person => {\n        const mother = people\n          .find(mom => mom.name\n        === person.motherName) || null;\n        const father = people\n          .find(dad => dad.name === person.fatherName) || null;\n\n        return {\n          ...person,\n          mother,\n          father,\n        };\n      });\n  }, [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && isError && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !isError && people.length < 1 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !isError && people.length > 0 && (\n            <PeopleTable people={preparedPeople} />\n          )}\n\n        </div>\n      </div>\n\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n  NavLink,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { People } from './components/People';\n\nconst getIsActive = ({ isActive }: { isActive: boolean }) => (\n  classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n);\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getIsActive}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={getIsActive}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\">\n              <Route index element={<h1 className=\"title\">Home Page</h1>} />\n              <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n              <Route path=\"people/\" element={<People />}>\n                <Route path=\":slug\" element={<People />} />\n              </Route>\n              <Route\n                path=\"*\"\n                element={<h1 className=\"title\">Page not found</h1>}\n              />\n            </Route>\n          </Routes>\n        </div>\n\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}